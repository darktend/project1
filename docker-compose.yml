services:
  web:
    context: ./frontend
    image: "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/web:${IMAGE_TAG}"
    ports:
      - "80:80"
    env_file:
      - .env
    volumes:
      - .:/app
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first


  backend_redis:
    context: ./backend_redis
    image: "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/redis:${IMAGE_TAG}"
    ports:
      - "6379:6379"
    env_file:
      - .env
    volumes:
      - .:/app
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first


  backend_rds:
    context: ./backend_rds
    image: "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/rds:${IMAGE_TAG}"
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - .:/app
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first

volumes:
  postgres_data:
